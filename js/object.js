/**
 * 1、对象的创建方式
 * 2、对象的使用
 * 3、原型链和原型模式
 * 
 * 
 */


/**
 
 面向对象: 对代码的一种抽象，对外统一提供调用接口的编程思想
 基于原型的面向对象

 原型: JS函数中由prototype属性引用了一个对象即原型对象(原型)


  闭包：
  
  What : 闭包是一个拥有许多变量和绑定了这些变量的环境的表达式(通常是一个函数).
         说白了就是函数的嵌套，内层函数可以使用外层函数的所有变量，即使外层函数已经执行完毕。如下

      function fn() {
        var i = 9;
        console.log(i);
      }
      函数内的变量i在外面是直接访问不到的， 如果要访问就要用到闭包。

      function fn() {
        var i = 9;
        funtion fn1() {
          return i;
        }
        return fn1;
      }
      var ret = fn();
      console.log(ret()); //9
 
   1、闭包解决的一个问题是在全局环境中也能访问到局部变量 比如
   2、让访问的变量保留在内存中 比如 i;      
   
How：
    
 
 * 
 */