

/**
 * 对象是什么
   怎么创建对象
   对象的使用方法 修改属性、增加属性、执行方法、删除属性、遍历属性。


*/
/**
 * 1、函数是什么 ->函数的由来
 * 2、js中的函数 ->函数的声明方式 命名函数、匿名函数
 * 3、为什么要使用函数 ->使用函数的好处
 * 4、函数的本质 ->函数的二象性
 * 5、函数的传参 ->形参和实参要保持一样吗？ arugments 有什么用？ 它是数组吗 apply 和call呢 ？ protery?
 * 6、函数的返回值 ->返回的类型有哪些  函数能作为返回值返回吗
 * 
 */


 /***
  * 1、函数是什么?
  * 函数是将实现了某个功能的语句组成的一个代码块，可以一处定义，到处使用。
  * 
  *2、js中的函数

    function add(x,y){
      return x+y;
    }

    function:函数定义关键字 表明定义的是一个函数
    add: 函数名  见名知义 知道这个函数实现的是什么功能
    x,y: 函数参数 由外部传入 js中的形参和实参不一定匹配 形参定义了多个，实参可能一个不传或传多个
    {...}: 大括号里面的部分就是函数的执行体 有局部作用域的功能，这里封装了函数的具体功能。
    return: 函数返回 函数可以有返回值也可以没有返回值 具体看需要

    以上定义的是有函数名的函数，也可以定义匿名函数  比如
    function (x,y){
      return x+y;
    }
    匿名函数一般可用作函数的参数传入或返回值或者不需要函数名调用的地方。

    函数执行的时候发生了什么
    函数调用的时候会创建一个局部的作用域， 同时传参和执行代码。
    当函数执行完毕的时候， 就会销毁所有的局部变量。

    3、使用函数的好处
       3.1 可以将实现相同功能的代码片段封装，以便只定义一次可以到处使用，代码复用
       3.2 隐藏代码的实现细节，提高程序的可读性
       
    4、函数的本质
       4.1 函数就是可以被调用的函数 这是函数最原始的作用
       4.2 函数是对象，它拥有对象所有的一切特性 比如
           4.2.1 函数可以添加属性和方法
           4.2.2 函数本体可以作为对象的值或者数组的值或者赋值给一个变量使用
           4.2.3 函数可以作为函数的参数传入
           4.2.4 函数可以作为函数的返回值返回

     函数名的作用: 函数名就是函数对象的引用变量,函数名对应栈中的位置保存的是函数在堆中定义的起始地址。 通过函数名可以间接引用到函数
     对于匿名函数来说可以赋值给一个变量也可以直接作为变量使用。

     函数名加括号和不加括号的区别
     函数名加括号表示调用函数，如果是不加括号表示引用函数本体(函数定义)。
  * 
  */